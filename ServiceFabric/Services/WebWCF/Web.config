<?xml version="1.0"?>
<configuration>
  <configSections>
    <section name="ConnectionStrings" type="System.Configuration.NameValueSectionHandler, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
    <section name="nbk.foundations" type="NBK.Foundations.Common.FoundationsSettings, NBK.Foundations, Version=2.0.0.0, Culture=neutral, PublicKeyToken=f38e6d751bb874eb"/>
    <section name="loggingConfiguration" type="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.LoggingSettings, Microsoft.Practices.EnterpriseLibrary.Logging, Version=3.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
    <section name="exceptionHandling" type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ExceptionHandlingSettings, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling, Version=3.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
    <section name="dataConfiguration" type="Microsoft.Practices.EnterpriseLibrary.Data.Configuration.DatabaseSettings, Microsoft.Practices.EnterpriseLibrary.Data, Version=3.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
    <section name="cachingConfiguration" type="Microsoft.Practices.EnterpriseLibrary.Caching.Configuration.CacheManagerSettings, Microsoft.Practices.EnterpriseLibrary.Caching, Version=3.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  </configSections>
  <nbk.foundations>
    <application name="I-Hub Implementation"></application>
    <exceptionHandlingPolicyLookup defaultPolicy="Publish Policy">
      <assemblyLookup>
        <add name="NBK.IHub.Service" policy="Replace Policy"></add>
      </assemblyLookup>
    </exceptionHandlingPolicyLookup>
  </nbk.foundations>
  <loggingConfiguration name="Logging Application Block" tracingEnabled="true"
  defaultCategory="General" logWarningsWhenNoCategoriesMatch="true">
    <listeners>
      <add source="IHub Application" formatter="Text Formatter" log="Application"
     machineName="." listenerDataType="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.FormattedEventLogTraceListenerData, Microsoft.Practices.EnterpriseLibrary.Logging, Version=3.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"
     traceOutputOptions="None" type="Microsoft.Practices.EnterpriseLibrary.Logging.TraceListeners.FormattedEventLogTraceListener, Microsoft.Practices.EnterpriseLibrary.Logging, Version=3.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"
     name="Formatted EventLog TraceListener" />
      <add name="Msmq TraceListener" type="Microsoft.Practices.EnterpriseLibrary.Logging.TraceListeners.MsmqTraceListener, Microsoft.Practices.EnterpriseLibrary.Logging, Version=3.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"
     listenerDataType="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.MsmqTraceListenerData, Microsoft.Practices.EnterpriseLibrary.Logging, Version=3.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"
     traceOutputOptions="None" queuePath=".\private$\NBKLogger"
     formatter="Binary Formatter" messagePriority="Normal" timeToReachQueue="49710.06:28:15"
     timeToBeReceived="49710.06:28:15" recoverable="false" useAuthentication="false"
     useDeadLetterQueue="false" useEncryption="false" transactionType="None" />
    </listeners>
    <formatters>
      <add type="Microsoft.Practices.EnterpriseLibrary.Logging.Formatters.BinaryLogFormatter, Microsoft.Practices.EnterpriseLibrary.Logging, Version=3.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"
     name="Binary Formatter" />
      <add template="Timestamp: {timestamp}	Severity: {severity}	Win32 Thread Id: {win32ThreadId}	Message: {message}"
     type="Microsoft.Practices.EnterpriseLibrary.Logging.Formatters.TextFormatter, Microsoft.Practices.EnterpriseLibrary.Logging, Version=3.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"
     name="Text Formatter" />
    </formatters>
    <categorySources>
      <add switchValue="All" name="Service">
        <listeners>
          <add name="Msmq TraceListener" />
        </listeners>
      </add>
      <add switchValue="All" name="General">
        <listeners>
          <add name="Msmq TraceListener" />
        </listeners>
      </add>
    </categorySources>
    <specialSources>
      <allEvents switchValue="All" name="All Events" />
      <notProcessed switchValue="All" name="Unprocessed Category">
        <listeners>
          <add name="Msmq TraceListener" />
        </listeners>
      </notProcessed>
      <errors switchValue="All" name="Logging Errors &amp; Warnings">
        <listeners>
          <add name="Msmq TraceListener" />
        </listeners>
      </errors>
    </specialSources>
  </loggingConfiguration>
  <exceptionHandling>
    <exceptionPolicies>
      <add name="I-Hub Exceptions Policy">
        <exceptionTypes>
          <add type="System.Exception, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
       postHandlingAction="None" name="Exception">
            <exceptionHandlers>
              <add logCategory="General" eventId="100" severity="Error" title="Enterprise Library Exception Handling"
         formatterType="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.TextExceptionFormatter, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling, Version=3.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"
         priority="0" type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging.LoggingExceptionHandler, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging, Version=3.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"
         name="Logging Handler" />
            </exceptionHandlers>
          </add>
        </exceptionTypes>
      </add>
      <add name="Publish Policy">
        <exceptionTypes>
          <add type="System.Exception, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
       postHandlingAction="NotifyRethrow" name="Exception">
            <exceptionHandlers>
              <add logCategory="Service" eventId="100" severity="Error" title="IHub Exception Handling"
         formatterType="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.TextExceptionFormatter, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling, Version=3.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"
         priority="0" type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging.LoggingExceptionHandler, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging, Version=3.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"
         name="Logging Handler" />
            </exceptionHandlers>
          </add>
        </exceptionTypes>
      </add>
    </exceptionPolicies>
  </exceptionHandling>
  <appSettings>
    <add key="aspnet:UseTaskFriendlySynchronizationContext" value="true"/>
    <!-- Log file name -->
    <add key="NBK.Common.Foundations.Logging.Logger.LogFilePathName" value="C:\NBKLog\EAIP1\FGWSB_"/>
    <!-- Statistics file name -->
    <add key="NBK.Common.Foundations.Logging.Logger.StatisticsFilePathName" value="C:\NBKLog\EAIP1\Statistics_"/>
    <!-- Log file maximum size, default is 10 meg (This is used for both, Log and Statistics files) -->
    <add key="NBK.Common.Foundations.Logging.Logger.MaxLogFileSize" value="10485760"/>
    <!-- XML file defining the entities and the actions that can be performed on them -->
    <add key="NBK.EAI.Routing.RequestRouter.CategoryConfigFilePath" value="C:\Source\EAIP1\Configurations\XML\Configuration\CategoryConfiguration.xml"/>
    <!-- Path of the file containing NBK error codes mappings -->
    <add key="NBK.Common.Foundations.Exceptions.ErrorCodesFilePath" value="C:\Source\EAIP1\Configurations\XML\Configuration\NBKErrorCodes.xml"/>
    <add key="NBK.Common.IVProvider" value="NBK.EAI.ApplicationAttributes.AppAttributes, NBK.EAI.ApplicationAttributes, Version=1.0.0.0, Culture=neutral, PublicKeyToken=04f0fb22b38ed1c1"/>
    <!-- If the performance of a DB query exceeds this value (in milliseconds) the performace will be logged; 
    given that Information Logging is enabled-->
    <add key="NBK.EAI.Adapters.DAAdapter.PerformanceThreshold" value="15000"/>
    <!-- If the performance of a HIS query exceeds this value (in milliseconds) the performace will be logged; 
    given that Information Logging is enabled-->
    <add key="NBK.EAI.Adapters.HISAdapter.PerformanceThreshold" value="15000"/>
    <add key="NBK.EAI.Routing.RequestRouter.InvalidXmlChars" value="0000,0100,0200,0300,0400,0500,0600,0700,0800,0B00,0C00,0E00,0F00,1000,1100,1200,1300,1400,1500,1A00,1B00,1C00,1D00,1E00,1F00,1600,1700,1800,1900,7F00"/>
    <add key="NBK.EAI.AmberPoint.HISUtility.HISConfigFilePath" value="C:\Source\EAIP1\Configurations\XML\Configuration\HISAdapterConfiguration.xml"/>
    <add key="NBK.EAI.Adapters.OrchestrationAdapter.CicsCutOff" value="20"/>
    <add key="AlAmilCardPrefix" value="589160"/>
  </appSettings>
  <ConnectionStrings>
    <add key="NBKDB2D" value="Database=NBKDB2T;UID=NBKEAIT;PWD=NBKDEMO1"/>
    <add key="NBKDB2C" value="Database=NBKDB2T;UID=NBKEAIT;PWD=NBKDEMO1"/>
    <add key="NBKODS" value="database=NBKODSDB; User ID=NBKEAIT; password=NBKEAIT123; server=vs-devods;"/>
    <add key="NBKSCT" value="database=SCT; User ID=crmuser; password=crmuser; server=vs-devsrv13;"/>
    <add key="CardDB" value="database=CardIssuer; User ID=NBKEAIT; password=NBKEAIT123; server=vs-devods;"/>
    <add key="BANCSODSDB" value="database=BANCS_ODS; User ID=NBKEAIT; password=NBKEAIT123; server=vs-devods;"/>
    <add key="BOODS" value="database=BOODS; User ID=uatdbreader; password=nbk.123; server=10.0.222.68;"/>
    <add key="NBKDB2Card" value="Database=NBKDB2T;UID=NBKEAIT;PWD=NBKDEMO1"/>
    <add key="FraudDB" value="database=NBKFraudDetect; User ID=NBKFraudDetectUser; password=nbk.123; server=NBKSQL_NBKFraudDetect;"/>
    <add key="CardAcquiringBI" value="database=CardAcquiringBI;User ID=msoluser;password=nbk.123;server=NBKSQL_CardAcquiringBI"/>
  </ConnectionStrings>
  <system.web>
    <compilation debug="true" targetFramework="4.6.1"/>
    <httpRuntime targetFramework="4.6"/>
  </system.web>
  <system.serviceModel>
    <behaviors>
      <serviceBehaviors>
        <behavior>
          <!-- To avoid disclosing metadata information, set the values below to false before deployment -->
          <serviceMetadata httpGetEnabled="true" httpsGetEnabled="true"/>
          <!-- To receive exception details in faults for debugging purposes, set the value below to true.  Set to false before deployment to avoid disclosing exception information -->
          <serviceDebug includeExceptionDetailInFaults="true"/>
        </behavior>
      </serviceBehaviors>
    </behaviors>
    <protocolMapping>
      <add binding="basicHttpsBinding" scheme="https"/>
    </protocolMapping>
    <serviceHostingEnvironment aspNetCompatibilityEnabled="true" multipleSiteBindingsEnabled="true"/>
  </system.serviceModel>
  <system.webServer>
    <modules runAllManagedModulesForAllRequests="true"/>
    <!--
        To browse web app root directory during debugging, set the value below to true.
        Set to false before deployment to avoid disclosing web app folder information.
      -->
    <directoryBrowse enabled="true"/>
  </system.webServer>
</configuration>